GET '/'
	Retruns the home.html file

GET '/home.js'
	Returns the home.js file
        This is a supporting file and is called by home.html

GET '/home.css'
	Returns the home.css file
        This is a supporting file and is called by home.html

POST '/fetchFactionList'
    Calls getFactionList and returns the result as a Json string.

POST '/fetchUnitList'
    Requires a JSON body with a dictionary containing a 'faction' and 'role' key. Faction must be the string name of a faction returned by fetchFactionList, role must be a string containing one of the values in the following list:
        Any
		HQ
		Troops
		Elites
		Fast Attack
		Heavy Support
		Dedicated Transport
		Flyer
		Fortification
		Lord of War

    Calls getUnitList and returns the result as a Json string.

POST '/fetchUnit'
    Requires a JSON body with a dictionary containing a 'unit' key. Unit must be the string name of a unit returned by fetchUnitList.

    Calls getUnitDetails and returns the result as a Json string.

POST '/fetchModelStats'
    Requires a JSON body with a dictionary containing a 'model' key. Model must be the string name of a unit returned by fetchUnitList.

    Calls getModelStats and returns the result as a Json string.

POST "/fetchArmy"
    Calls getArmy and returns the result as a Json string.

POST "/fetchStratagems"
    Calls getStratagems and returns the result as a Json string.

POST "/fetchStratagemDetails"
    Requires a JSON body with a dictionary containing a 'stratagemID' key. StratagemID must be an integer.

    Calls getStratagemDetails and returns the result as a Json string.

POST '/createUnit'
    Requires a JSON body with a dictionary containing a 'unit' and 'dynasty' key. Unit must be a dictionary containing unit data in the format specified in createUnit in the armymanager API. Dynasty must be a string containing the name of a dynasty (not currently used, needs an update to the logic).

	Calls createUnit with the specified unit and dynasty.

POST "/removeUnit"
    Requires a JSON body with a dictionary containing an 'id' key. ID must be an integer containing a user_army id.

	Calls removeUnit with the specified user_army unit id.